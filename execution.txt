Action: boolean branching Node q0 Memory (map [], map [("x", 0.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 0.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
Action: boolean branching Node q0 Memory (map [], map [("x", 2.0)], map []) 
Action: assignment Node q1 Memory(map [], map [("x", 2.0)], map [])
